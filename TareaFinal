using System;
using System.Collections.Generic;
using System.Threading.Tasks;

class JuegoDeCocina
{
    static async Task Main()
    {
        Console.WriteLine("¡Bienvenido al juego de cocina!");
        Console.WriteLine("Por favor, escribe el nombre del plato que deseas preparar:");
        string plato = Console.ReadLine();

        Console.WriteLine($"¡Genial! Vamos a preparar {plato}.");
        Console.WriteLine("Escribe los componentes de la receta separados por comas (ejemplo: cortar verduras, cocinar pasta, preparar salsa):");
        string[] componentes = Console.ReadLine()?.Split(',');

        if (componentes == null || componentes.Length == 0)
        {
            Console.WriteLine("No se ingresaron componentes. Finalizando el programa.");
            return;
        }

        // Tareas para preparar cada componente
        List<Task> tareasDePreparacion = new List<Task>();
        foreach (var componente in componentes)
        {
            string tarea = componente.Trim();
            tareasDePreparacion.Add(Task.Factory.StartNew(() =>
            {
                Console.WriteLine($"Tarea: {tarea}.");
                SimularTarea($"{tarea} lista.", new Random().Next(1000, 3000)); // Simular tiempo aleatorio
            }));
        }

        // Tarea adicional: limpiar la cocina
        Task limpiarCocina = Task.Run(() =>
        {
            Console.WriteLine("Tarea: Limpiando la cocina.");
            SimularTarea("Cocina limpia.", 1000);
        });

        // Tarea adicional: decorar el plato
        Task decoracionPlato = new Task(() =>
        {
            Console.WriteLine("Tarea: Decorando el plato.");
            SimularTarea("Decoración lista.", 1200);
        });
        decoracionPlato.Start();

        // Ejecutar las tareas
        Console.WriteLine("Iniciando la preparación...");
        await Task.WhenAll(tareasDePreparacion);

        // Continuar cuando todas las tareas principales terminen
        await Task.WhenAll(limpiarCocina, decoracionPlato);

        Console.WriteLine($"¡{plato} está listo para servir!");
        Console.WriteLine("¡Gracias por jugar!");
    }

    // Método para simular una tarea con un tiempo de espera
    static void SimularTarea(string mensajeFinal, int delay)
    {
        Task.Delay(delay).Wait();
        Console.WriteLine(mensajeFinal);
    }
}
