using System;
using System.Threading.Tasks;

class JuegoDeCocina
{
    static async Task Main()
    {
        Console.WriteLine("¡Bienvenido al juego de cocina!");

        // Tarea: Preparación del plato completo
        Task platoCompleto = Task.Factory.StartNew(() =>
        {
            Console.WriteLine("Comenzando la preparación del plato.");

            Task.Factory.StartNew(() =>
            {
                Console.WriteLine("Tarea: Cortando verduras.");
                Task.Delay(1500).Wait();
                Console.WriteLine("Verduras listas.");
            }, TaskCreationOptions.AttachedToParent);

            Task.Factory.StartNew(() =>
            {
                Console.WriteLine("Tarea: Cocinando la pasta.");
                Task.Delay(2000).Wait();
                Console.WriteLine("Pasta cocida.");
            }, TaskCreationOptions.AttachedToParent);

            Task.Factory.StartNew(() =>
            {
                Console.WriteLine("Tarea: Preparando la salsa.");
                Task.Delay(2500).Wait();
                Console.WriteLine("Salsa lista.");
            }, TaskCreationOptions.AttachedToParent);
        });

        // Usando Task.Run para una tarea adicional
        Task limpiarCocina = Task.Run(() =>
        {
            Console.WriteLine("Tarea: Limpiando la cocina.");
            Task.Delay(1000).Wait();
            Console.WriteLine("Cocina limpia.");
        });

        Task decoracionPlato = new Task(() =>
        {
            Console.WriteLine("Tarea: Decorando el plato.");
            Task.Delay(1200).Wait();
            Console.WriteLine("Decoración lista.");
        });
        decoracionPlato.Start();

        await platoCompleto.ContinueWith(t =>
        {
            Console.WriteLine("¡Receta lista!");
        }, TaskContinuationOptions.OnlyOnRanToCompletion);

        // Esperar todas las tareas
        await Task.WhenAll(platoCompleto, limpiarCocina, decoracionPlato);

        Console.WriteLine("¡Gracias por jugar!");
    }
}
